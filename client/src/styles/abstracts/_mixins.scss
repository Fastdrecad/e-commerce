// Flexbox mixins
@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Grid mixins
@mixin grid($columns: 1, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Typography mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Container mixin
@mixin container {
  width: 100%;
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $container-padding;
}

// Button mixin
@mixin button-variant($bg-color, $text-color: $text-light, $hover-darken: 10%) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius-md;
  padding: $spacing-sm $spacing-md;
  cursor: pointer;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: darken($bg-color, $hover-darken);
  }

  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Card mixin
@mixin card($padding: $spacing-md, $radius: $border-radius-md) {
  background-color: $bg-primary;
  border-radius: $radius;
  padding: $padding;
  box-shadow: $shadow-sm;
}

// Position mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Media query mixins
@mixin mobile {
  @media (max-width: 639px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: 640px) and (max-width: 1023px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 1024px) {
    @content;
  }
}

// Animation mixins
@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease-in;

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin slide-in($direction: "up", $distance: 20px, $duration: 0.3s) {
  animation: slideIn-#{$direction} $duration ease-out;

  @if $direction == "up" {
    @keyframes slideIn-up {
      from {
        transform: translateY($distance);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
  }
}
